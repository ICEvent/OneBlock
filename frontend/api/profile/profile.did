type Wallet = 
 record {
   addresses: vec record {
                    address: text;
                    network: Network;
                  };
   name: text;
 };
type UpdateProfile = 
 record {
   bio: text;
   name: text;
   pfp: text;
 };
type Result_1 = 
 variant {
   err: text;
   ok: Favorite;
 };
type Result = 
 variant {
   err: text;
   ok: nat;
 };
type Profile = 
 record {
   bio: text;
   createtime: int;
   id: text;
   links: vec Link;
   name: text;
   owner: principal;
   pfp: text;
 };
type NewProfile = 
 record {
   bio: text;
   id: text;
   name: text;
   pfp: text;
 };
type Network = 
 variant {
   bitcoin;
   ethereum;
   ic;
 };
type Link = 
 record {
   name: text;
   url: text;
 };
type Inbox = 
 record {
   inboxid: text;
   owner: principal;
 };
type Favorite = 
 record {
   address: text;
   name: text;
   owner: principal;
 };
service : {
  addAdmin: (text) -> (Result);
  addFavorite: (record {
                  address: text;
                  name: text;
                }) -> (Result_1);
  addInbox: (text) -> (Result);
  addLink: (text, Link) -> (Result);
  addWallet: (text, Wallet) -> (Result);
  availableCycles: () -> (nat) query;
  createProfile: (NewProfile) -> (Result);
  deleteLink: (text, text) -> (Result);
  getInbox: (text) -> (opt Inbox) query;
  getMyFavorites: () -> (vec Favorite) query;
  getMyInbox: () -> (opt Inbox) query;
  getMyProfile: () -> (opt Profile) query;
  getProfile: (text) -> (opt Profile) query;
  getProfileByPrincipal: (text) -> (opt Profile) query;
  updateProfile: (text, UpdateProfile) -> (Result);
}
